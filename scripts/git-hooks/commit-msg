#!/bin/bash
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

INPUT_FILE=$1
START_LINE=`head -1 $INPUT_FILE`
PATTERN='^\[((?i)[a-z]+-[0-9]+)\].|(?i)merge'
length=${#START_LINE}

check=$(head -1 $1 | egrep $PATTERN)
if [ "" = "$check" ]; then
    echo "Bad commit message. You must write [ticketid] see example: [ISSUE-123] commit message"
    echo "Message: ${START_LINE}"
    exit 1
fi

if [ $length -le 50 ]; then
    echo "Please enter a message with at least 50 characters."
    echo "Message: ${START_LINE}"
    exit 1
fi


